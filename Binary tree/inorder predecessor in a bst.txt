void findPredecessor(Node* root, Node*& prec, int key)
{
	// base case
	if (root == nullptr) {
		prec = nullptr;
		return;
	}

	// if node with key's value is found, the predecessor is maximum value
	// node in its left subtree (if any)
	if (root->data == key)
	{
		if (root->left)
			prec = findMaximum(root->left);
	}

	// if given key is less than the root node, recur for left subtree
	else if (key < root->data)
	{
		findPredecessor(root->left, prec, key);
	}

	// if given key is more than the root node, recur for right subtree
	else
	{
		// update predecessor to current node before recursing 
		// in right subtree
		prec = root;
		findPredecessor(root->right, prec, key);
	}
}