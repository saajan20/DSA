Problem: https://www.geeksforgeeks.org/find-minimum-number-of-coins-that-make-a-change/
Video: https://www.youtube.com/watch?v=I-l6PBeERuc&list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go&index=16

Solution
When asked minimum or maximum of something we mostly do the opposite in the initialization part
Recursive

 long long int minimumNoOfCoins(int coin[], int size, int sum) {
	
	if(sum==0)//if sum is 0 we need 0 coins
        return 0;
        
        if(size==0)//if we don't have any coin we can't make any sum>0 and as per PS we can't answer so we will return MAX value as min is asked
        return INT_MAX;
        
        if(coin[size-1]<=sum){
            return min(1+count(coin,size,sum-coin[size-1]),count(coin,size-1,sum));
        }
        else
        return count(coin,size-1,sum);
}

//bottom up

long long int minimumNoOfCoins(int coin[], int size, int sum) {

	 long long t[size+1][sum+1];
         int i,j;
         
         for(j=0;j<=sum;j++)
         t[0][j]=INT_MAX;
         
         for(i=0;i<=size;i++)
         t[i][0]=0;
         
          for(i=1;i<=size;i++){
            for(j=1;j<=sum;j++){
                if(coin[i-1]<=j){
                    t[i][j] = min(t[i][j-coin[i-1]] + 1, t[i-1][j]);
                }
                else
                t[i][j]=t[i-1][j];
            }
        }
       return t[size][sum]; 
}

maximise rod cut can also be solved via this logic

//need to print the min of coins
