#include<bits/stdc++.h>
#define ll long long int
using namespace std;
char dic[20][20];
bool vis[20][20];
ll l,r;
string s;
bool check(int x,int y)
{
    if(x<0||x>=l||y<0||y>=r)
    return false;
    return true;
}
bool dfs(int x,int y,int curr,int total)
{   //cout<<x<<" "<<y<<endl;
    if(curr==total)
    return true;
    if(vis[x][y])
    return false;
    
    vis[x][y]=true;
    if(check(x+1,y+1))
    {
        if(s[curr]==dic[x+1][y+1])
        {
        bool a=dfs(x+1,y+1,curr+1,total);
        if(a)
        return a;
        }
    }
    
    if(check(x+1,y-1))
    {
        if(s[curr]==dic[x+1][y-1])
        {
        bool a=dfs(x+1,y-1,curr+1,total);
        if(a)
        return a;
        }
    }
    
    if(check(x+1,y))
    {
        if(s[curr]==dic[x+1][y])
        {
        bool a=dfs(x+1,y,curr+1,total);
        if(a)
        return a;
        }
    }
    
    if(check(x-1,y+1))
    {
        if(s[curr]==dic[x-1][y+1])
        {
        bool a=dfs(x-1,y+1,curr+1,total);
        if(a)
        return a;
        }
    }
    
    if(check(x-1,y))
    {
        if(s[curr]==dic[x-1][y])
        {
        bool a=dfs(x-1,y,curr+1,total);
        if(a)
        return a;
        }
    }
    
    if(check(x-1,y-1))
    {
        if(s[curr]==dic[x-1][y-1])
        {
        bool a=dfs(x-1,y-1,curr+1,total);
        if(a)
        return a;
        }
    }
    
    if(check(x,y+1))
    {
        if(s[curr]==dic[x][y+1])
        {
        bool a=dfs(x,y+1,curr+1,total);
        if(a)
        return a;
        }
    }
    
    if(check(x,y-1))
    {
        if(s[curr]==dic[x][y-1])
        {
        bool a=dfs(x,y-1,curr+1,total);
        if(a)
        return a;
        }
    }
    
   return false; 
}
int main()
 {
	//code
	ll t;
	cin>>t;
	while(t--)
	{
	    vector <string> v;
	    v.clear();
	    ll n,i,j,k;
	    cin>>n;
	    for(i=0;i<n;i++)
	    {
	        cin>>s;
	        v.push_back(s);
	    }
	    map<int,int> m;
	    cin>>l>>r;
	    for(i=0;i<l;i++)
	    {
	        for(j=0;j<r;j++)
	        {
	            cin>>dic[i][j];
	        }
	    }
	  for(i=0;i<n;i++)
	  {  
	    memset(vis,false,sizeof(vis));
	    s=v[i];
	    for(j=0;j<l;j++)
	    {
	        for(k=0;k<r;k++)
	        {
	            if(dic[j][k]==s[0])
	            {
	                if(dfs(j,k,1,s.length()))
	                {   
	                    m[i]=1;
	                    break;
	                }
	                
	            }
	        }
	        if(k!=r)
	        break;
	    }
	      
	  }
	  for(i=0;i<n;i++)
	  {
	      if(m[i])
	      cout<<v[i]<<" ";
	  }
	  cout<<endl;
	}
	return 0;
}