Problem: https://www.geeksforgeeks.org/find-the-element-that-appears-once-in-a-sorted-array/

Solu:

All elements before the required have the first occurrence at even index (0, 2, ..) and the next occurrence at odd index (1, 3, â€¦). 
And all elements after the required elements have the first occurrence at an odd index and the next occurrence at an even index. 

int findOnce(int a[], int n)
    {
        //code here.
        int start=0;
        int end=n-1;
        
        //base edges
        //1.Only one element
        if(start==end)
        return a[start];
        //2.if first element is the answer, coz we can't check mid-1
        if(a[start]!=a[start+1])
        return a[start];
        //3.if last element is the answer, coz we can't check mid+1
        if(a[end]!=a[end-1])
        return a[end];
        
        while(start<=end){
            int mid = start + (end-start)/2;
            //if element found
            if((a[mid]!=a[mid-1]) && a[mid]!=a[mid+1]){
                return a[mid];
            }
            //mid is even
            if(mid%2==0){
                if(a[mid]==a[mid+1])
                start=mid+2;
                else
                end=mid-2;
            }
            else{
                if(a[mid]==a[mid-1])
                start=mid+1;
                else
                end=mid-1;
            }
        }
        return -1;
    }